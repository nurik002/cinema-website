# Generated by Django 3.2.4 on 2021-06-30 12:38

import ckeditor.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FilmModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(upload_to='covers', verbose_name='cover')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('title_en', models.CharField(max_length=250, null=True, verbose_name='title')),
                ('title_ru', models.CharField(max_length=250, null=True, verbose_name='title')),
                ('rating', models.FloatField(default=0, verbose_name='rating')),
                ('quality', models.CharField(choices=[('HD 1080', 'HD 1080'), ('HD 720', 'HD 720'), ('DVD', 'DVD'), ('TS', 'TS')], max_length=10, verbose_name='quality')),
                ('recommended_age', models.IntegerField(verbose_name='recommended_age')),
                ('category', models.CharField(choices=[('films', 'FILMS'), ('series', 'SERIES'), ('cartoon', 'CARTOON')], max_length=50, verbose_name='category')),
                ('release_year', models.IntegerField(default=0)),
                ('running_time', models.IntegerField()),
                ('country', models.CharField(max_length=160)),
                ('country_en', models.CharField(max_length=160, null=True)),
                ('country_ru', models.CharField(max_length=160, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('description_en', ckeditor.fields.RichTextField(null=True)),
                ('description_ru', ckeditor.fields.RichTextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('film', models.FileField(upload_to='films', verbose_name='film')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilmSeriesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover', models.ImageField(upload_to='covers', verbose_name='cover')),
                ('title', models.CharField(max_length=250, verbose_name='title')),
                ('title_en', models.CharField(max_length=250, null=True, verbose_name='title')),
                ('title_ru', models.CharField(max_length=250, null=True, verbose_name='title')),
                ('rating', models.FloatField(default=0, verbose_name='rating')),
                ('quality', models.CharField(choices=[('HD 1080', 'HD 1080'), ('HD 720', 'HD 720'), ('DVD', 'DVD'), ('TS', 'TS')], max_length=10, verbose_name='quality')),
                ('recommended_age', models.IntegerField(verbose_name='recommended_age')),
                ('category', models.CharField(choices=[('films', 'FILMS'), ('series', 'SERIES'), ('cartoon', 'CARTOON')], max_length=50, verbose_name='category')),
                ('release_year', models.IntegerField(default=0)),
                ('running_time', models.IntegerField()),
                ('country', models.CharField(max_length=160)),
                ('country_en', models.CharField(max_length=160, null=True)),
                ('country_ru', models.CharField(max_length=160, null=True)),
                ('description', ckeditor.fields.RichTextField()),
                ('description_en', ckeditor.fields.RichTextField(null=True)),
                ('description_ru', ckeditor.fields.RichTextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FilmSeriesSeasonModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField(verbose_name='season')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season', to='movie.filmseriesmodel')),
            ],
        ),
        migrations.CreateModel(
            name='GenreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='title')),
                ('title_en', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('title_ru', models.CharField(max_length=50, null=True, verbose_name='title')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
            },
        ),
        migrations.CreateModel(
            name='ReviewModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(10), django.core.validators.MinValueValidator(0)])),
                ('film', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='movie.filmmodel')),
            ],
        ),
        migrations.CreateModel(
            name='FilmSeriesVideoModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('video', models.FileField(upload_to='series', verbose_name='video')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='movie.filmseriesseasonmodel')),
            ],
        ),
        migrations.AddField(
            model_name='filmseriesmodel',
            name='genre',
            field=models.ManyToManyField(related_name='film_series', to='movie.GenreModel', verbose_name='genre'),
        ),
        migrations.AddField(
            model_name='filmmodel',
            name='genre',
            field=models.ManyToManyField(related_name='films', to='movie.GenreModel', verbose_name='genre'),
        ),
    ]
